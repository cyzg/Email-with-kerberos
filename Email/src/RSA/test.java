package RSA;
import java.math.BigInteger;
import java.security.SecureRandom;



public class test {

	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		rsa rsa = new rsa() ;
//		BigInteger p = new BigInteger("106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169") ;
//		BigInteger q = new BigInteger("144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209") ;
//		BigInteger p = new BigInteger(99,new SecureRandom());
//		BigInteger q = new BigInteger(99,new SecureRandom());
		
	    // 生成公钥私钥'''
	    // pubkey, selfkey = gen_key(p, q)
	  
	    String[][] keys = keymanger.keymanger();
	    
	    String[] pubkey  = keys[0] ;
	    String[] selfkey = keys[1] ;
	    System.out.println("publickey");
	    for(int i = 0;i<pubkey.length;i++) {
	    	System.out.println(pubkey[i]);
	    }

	    System.out.println();
	    System.out.println("selfkey");
	    for(int i = 0;i<selfkey.length;i++) {
	    	System.out.println(selfkey[i]);
	    }
		String plaintext = "111010110011111011010100110001000011110110011010001011110011011100010010000000011001000001010001011000000001000001100101000100100000000110010000010100010110000000010001011001010001010001001000000101000100000110010010010000000100010110000010100101010001100010010001001101100010011000100100001100010100000100011001011100010100010001100100010001110110010101010110100001000011001110011000000100100110000001100100100000110111010000000111000001011000010100111001001001001000011001110010";
		System.out.println("len:"+plaintext.length());
		String c = rsa.encrypt(plaintext, pubkey);
		System.out.println("明文："+plaintext);
		System.out.println("密文："+c);
		System.out.println("len:"+c.length());
		String plainText = rsa.decrypt(c, selfkey);
		System.out.println("明文："+plainText);

	}
	}


